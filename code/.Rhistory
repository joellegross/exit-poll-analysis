predicted_df <- read_csv(file, show_col_types = FALSE) %>%
rename_with(tolower)%>%
transmute(
state = state,
predicted = ifelse(vote_share > 1, vote_share / 100, vote_share),
year = as.character(year)
)
merged_df <- left_join(predicted_df, sex_pct, by = "state") %>%
mutate(region = state.region[match(state, state.abb)]) %>%
drop_na()
all_results[[year]] <- merged_df
model <- lm(predicted ~ pct_female, data = merged_df)
pval <- summary(model)$coefficients["pct_female", "Pr(>|t|)"]
model_stats[[year]] <- tibble(year = year, p_value = pval)
}
combined_all <- bind_rows(all_results) %>%
mutate(year = factor(year, levels = years_to_run))
model_stats_df <- bind_rows(model_stats)
facet_labels <- model_stats_df %>%
mutate(
year = factor(year, levels = years_to_run),
label = glue("p = {pvalue(p_value, accuracy = 0.001)}")
)
facet_plot <- ggplot(combined_all, aes(x = pct_female, y = predicted, color = region)) +
geom_point(size = 2.5, alpha = 0.8) +
geom_smooth(method = "lm", se = TRUE, color = "black", linewidth = 1, show.legend = FALSE) +
facet_wrap(~ year) +
geom_text(
data = facet_labels,
mapping = aes(x = 48, y = 0.25, label = label),
inherit.aes = FALSE,
size = 4
) +
labs(
title = "Predicted Democratic Vote Share vs. % Female Population",
subtitle = glue("Colored by Region • ACS {acs_year} 5-Year Estimates"),
x = "Percent Female (ACS)",
y = "Predicted Democratic Vote Share",
color = "Region"
) +
theme_minimal(base_size = 14)
ggsave("../plots/facet_female_vs_predicted.png", plot = facet_plot, width = 12, height = 7)
library(tidyverse)
library(glue)
library(scales)
acs_df <- read_csv("../data/census/state_level_acs_summary_2022.csv", show_col_types = FALSE)
years_to_run <- c("2008", "2012", "2016", "2020", "2024")
predicted_path <- "../output"
all_results <- list()
model_stats <- list()
for (year in years_to_run) {
message(glue("Processing {year}..."))
file <- list.files(predicted_path, pattern = glue("all_state_predictions_{year}.*\\.csv$"), full.names = TRUE)[1]
predicted_df <- read_csv(file, show_col_types = FALSE) %>%
transmute(
state = state,
predicted = ifelse(vote_share > 1, vote_share / 100, vote_share),
year = year
)
merged_df <- left_join(predicted_df, acs_df, by = "state") %>%
drop_na(pct_black)
merged_df <- merged_df %>%
mutate(region = state.region[match(state, state.abb)]) %>%
drop_na(region)
all_results[[year]] <- merged_df
model <- lm(predicted ~ pct_black, data = merged_df)
pval <- summary(model)$coefficients["pct_black", "Pr(>|t|)"]
model_stats[[year]] <- tibble(year = year, p_value = pval)
}
combined_all <- bind_rows(all_results)
model_stats_df <- bind_rows(model_stats)
facet_labels <- model_stats_df %>%
mutate(
label = glue("p = {pvalue(p_value, accuracy = 0.001)}"),
year = as.character(year)
)
facet_plot <- ggplot(combined_all, aes(x = pct_black, y = predicted, color = region)) +
geom_point(size = 2.5, alpha = 0.8) +
geom_smooth(method = "lm", se = TRUE, color = "black", linewidth = 1, show.legend = FALSE) +
facet_wrap(~ year) +
geom_text(
data = facet_labels,
mapping = aes(x = 25, y = 0.27, label = label),
inherit.aes = FALSE,
size = 4
) +
labs(
title = "Predicted Democratic Vote Share vs. % Black Population",
subtitle = glue("Colored by Region • ACS {acs_year} 5-Year Estimates"),
x = "Percent Black (ACS)",
y = "Predicted Democratic Vote Share",
color = "Region"
) +
theme_minimal(base_size = 14)
ggsave("../plots/facet_by_region_with_pvalues.png", plot = facet_plot, width = 12, height = 7)
year = 2008
prev_year = "2004"
exit_data <- read_csv(paste0("../data/exit_poll_combined_", year,".csv"))
year = 2008
prev_year = "2004"
exit_data <- read_csv(paste0("../data/combined/exit_poll_combined_", year,".csv"))
year = 2008
prev_year = "2004"
exit_data <- read_csv(paste0("../data/exit poll/combined/exit_poll_combined_", year,".csv"))
year = 2008
prev_year = "2004"
exit_data <- read_csv(paste0("../data/exit polls/combined/exit_poll_combined_", year,".csv"))
prev_vote <- read_csv(paste0("../data/past results/", prev_year, "_pres_dem_share_by_state.csv"))
exit_data <- exit_data %>%
left_join(prev_vote %>% rename(prev_vote_share = dem_share), by = "state")
age_levels  <- c("18-29", "30-44", "45-65", "65+")
sex_levels  <- c("Male", "Female")
race_levels <- c("White", "Black", "Hispanic/Latino", "Asian", "Other")
educ_levels <- c("College graduate", "No college degree")
year <- "2008"
year_prev <- "2004"
n_draws <- 2000
chunk_size <- 5000
fit <- readRDS(paste0("../models/mrp_model_with_prev_vote_", year, ".rds"))
prev_vote <- read_csv(paste0("../data/past results/", year_prev, "_pres_dem_share_by_state.csv"), show_col_types = FALSE) %>%
rename(prev_vote_share = dem_share)
poststrat_files <- list.files(paste0("data/", year, "/"), pattern = "^poststrat_frame_.*\\.csv$", full.names = TRUE)
library(tidyverse)
library(rvest)
election_data <- read_csv(
"../data/past results/1976-2020-president.csv",
col_types = cols(
year = col_integer(),
office = col_character(),
state_po = col_character(),
candidatevotes = col_double(),
party_detailed = col_character(),
.default = col_guess()
)
)
library(tidyverse)
library(knitr)
metrics_dir <- "../output"
metric_files <- list.files(metrics_dir, pattern = "mrp_metrics_\\d{4}\\.csv$", full.names = TRUE)
metrics_df <- metric_files %>%
map_df(~ read_csv(.x, show_col_types = FALSE))
metrics_df <- metrics_df %>%
mutate(across(c(MAE, RMSE, R2), ~ round(.x, 3)))
kable(metrics_df, format = "latex", digits = 3, booktabs = TRUE,
caption = "Model Evaluation Metrics by Year")
library(tidyverse)
library(ggplot2)
actual_path <- "data/past results/"
predicted_path <- "output"
actual_files <- list.files(actual_path, pattern = "_pres_dem_share_by_state\\.csv$", full.names = TRUE)
actual_df <- map_dfr(actual_files, function(file) {
year <- str_extract(file, "\\d{4}")
read_csv(file) %>%
mutate(year = year)
})
predicted_files <- list.files(predicted_path, pattern = "all_state_predictions_\\d{4}.*\\.csv$", full.names = TRUE)
predicted_df <- map_dfr(predicted_files, function(file) {
year <- str_extract(file, "\\d{4}")
read_csv(file) %>%
mutate(year = year)
})
actual_df <- map_dfr(actual_files, function(file) {
year <- str_extract(file, "\\d{4}")
read_csv(file) %>%
mutate(year = year)
}) %>%
rename(state = state, actual = dem_share) %>%
filter(year != "2004")
library(tidyverse)
library(ggplot2)
actual_path <- "data/past results/"
predicted_path <- "../output"
actual_files <- list.files(actual_path, pattern = "_pres_dem_share_by_state\\.csv$", full.names = TRUE)
actual_df <- map_dfr(actual_files, function(file) {
year <- str_extract(file, "\\d{4}")
read_csv(file) %>%
mutate(year = year)
})
predicted_files <- list.files(predicted_path, pattern = "all_state_predictions_\\d{4}.*\\.csv$", full.names = TRUE)
predicted_df <- map_dfr(predicted_files, function(file) {
year <- str_extract(file, "\\d{4}")
read_csv(file) %>%
mutate(year = year)
})
actual_df <- map_dfr(actual_files, function(file) {
year <- str_extract(file, "\\d{4}")
read_csv(file) %>%
mutate(year = year)
}) %>%
rename(state = state, actual = dem_share) %>%
filter(year != "2004")
ap_dfr(actual_files, function(file) {
year <- str_extract(file, "\\d{4}")
read_csv(file) %>%
mutate(year = year)
}) %>%
rename(state = state, actual = dem_share) %>%
filter(year != "2004")
library(tidyverse)
library(ggplot2)
actual_path <- "data/past results"
predicted_path <- "../output"
actual_files <- list.files(actual_path, pattern = "_pres_dem_share_by_state\\.csv$", full.names = TRUE)
actual_df <- map_dfr(actual_files, function(file) {
year <- str_extract(file, "\\d{4}")
read_csv(file) %>%
mutate(year = year)
})
predicted_files <- list.files(predicted_path, pattern = "all_state_predictions_\\d{4}.*\\.csv$", full.names = TRUE)
predicted_df <- map_dfr(predicted_files, function(file) {
year <- str_extract(file, "\\d{4}")
read_csv(file) %>%
mutate(year = year)
})
actual_df <- map_dfr(actual_files, function(file) {
year <- str_extract(file, "\\d{4}")
read_csv(file) %>%
mutate(year = year)
}) %>%
rename(state = state, actual = dem_share) %>%
filter(year != "2004")
library(tidyverse)
library(ggplot2)
actual_path <- "../data/past results"
predicted_path <- "../output"
actual_files <- list.files(actual_path, pattern = "_pres_dem_share_by_state\\.csv$", full.names = TRUE)
actual_df <- map_dfr(actual_files, function(file) {
year <- str_extract(file, "\\d{4}")
read_csv(file) %>%
mutate(year = year)
})
predicted_files <- list.files(predicted_path, pattern = "all_state_predictions_\\d{4}.*\\.csv$", full.names = TRUE)
predicted_df <- map_dfr(predicted_files, function(file) {
year <- str_extract(file, "\\d{4}")
read_csv(file) %>%
mutate(year = year)
})
actual_df <- map_dfr(actual_files, function(file) {
year <- str_extract(file, "\\d{4}")
read_csv(file) %>%
mutate(year = year)
}) %>%
rename(state = state, actual = dem_share) %>%
filter(year != "2004")
predicted_df <- predicted_df %>%
rename(state = state, predicted = vote_share)
combined_df <- left_join(predicted_df, actual_df, by = c("state", "year"))
combined_df <- combined_df %>%
mutate(
predicted = ifelse(year == "2024" & predicted > 1, predicted / 100, predicted),
actual    = ifelse(actual > 1, actual / 100, actual),  # optional safeguard
error     = predicted - actual,
abs_error = abs(error)
)
combined_df <- combined_df %>%
mutate(error = predicted - actual,
abs_error = abs(error),
year = factor(year))
combined_df <- combined_df %>%
mutate(year = relevel(factor(year), ref = "2020"))
model <- lm(abs_error ~ year, data = combined_df)
summary(model)
anova(model)
combined_df <- combined_df %>%
mutate(year = factor(year, levels = sort(unique(as.numeric(as.character(year)))))
)
p1 <- ggplot(combined_df, aes(x = year, y = abs_error)) +
geom_boxplot(fill = "skyblue", color = "black") +
labs(
title = "Prediction Error by Year",
subtitle = "Absolute difference between predicted and actual Democratic vote share",
x = "Election Year",
y = "Absolute Error"
) +
theme_minimal(base_size = 14)
ggsave("../plots/abs_error_by_year_boxplot.png", plot = p1, width = 8, height = 5)
# === Load Libraries ===
library(tidyverse)
library(glue)
library(ggrepel)
library(scales)
years_to_run <- c("2008", "2012", "2016", "2020", "2024")
acs_year <- 2022
predicted_path <- "../output"
dir.create("plots", showWarnings = FALSE)
acs_df <- read_csv("../data/census/state_level_acs_summary_2022.csv", show_col_types = FALSE)
educ_pct <- acs_df %>%
select(state, pct_college) %>%
drop_na(pct_college)
all_results <- list()
model_stats <- list()
for (year in years_to_run) {
message(glue("📊 Processing {year}..."))
file <- list.files(predicted_path, pattern = glue("all_state_predictions_{year}.*\\.csv$"), full.names = TRUE)[1]
predicted_df <- read_csv(file, show_col_types = FALSE) %>%
transmute(
state = state,
predicted = ifelse(vote_share > 1, vote_share / 100, vote_share),
year = as.character(year)
)
merged_df <- left_join(predicted_df, educ_pct, by = "state") %>%
mutate(region = state.region[match(state, state.abb)]) %>%
drop_na()
all_results[[year]] <- merged_df
model <- lm(predicted ~ pct_college, data = merged_df)
pval <- summary(model)$coefficients["pct_college", "Pr(>|t|)"]
model_stats[[year]] <- tibble(year = as.numeric(year), p_value = pval)
}
combined_all <- bind_rows(all_results) %>%
mutate(year = factor(year, levels = years_to_run))
model_stats_df <- bind_rows(model_stats)
facet_labels <- model_stats_df %>%
mutate(
year = factor(year, levels = years_to_run),
label = glue("p = {pvalue(p_value, accuracy = 0.001)}")
)
facet_plot <- ggplot(combined_all, aes(x = pct_college, y = predicted, color = region)) +
geom_point(size = 2.5, alpha = 0.8) +
geom_smooth(method = "lm", se = TRUE, color = "black", linewidth = 1, show.legend = FALSE) +
facet_wrap(~ year) +
geom_text(
data = facet_labels,
mapping = aes(x = 25, y = 0.27, label = label),
inherit.aes = FALSE,
size = 4
) +
labs(
title = "Predicted Democratic Vote Share vs. % with College Degree",
subtitle = glue("Colored by Region • ACS {acs_year} 5-Year Estimates"),
x = "Percent Age 25+ with Bachelor’s or Higher (ACS)",
y = "Predicted Democratic Vote Share",
color = "Region"
) +
theme_minimal(base_size = 14)
ggsave("../plots/facet_college_vs_predicted.png", plot = facet_plot, width = 12, height = 7)
write_csv(model_stats_df, "../plots/college_regression_table.csv")
message("Done! Plot and regression table saved.")
# === Load Libraries ===
library(tidycensus)
library(tidyverse)
library(glue)
library(ggrepel)
library(scales)
library(broom)
years_to_run <- c("2008", "2012", "2016", "2020", "2024")
acs_year <- 2022
predicted_path <- "../output"
dir.create("plots", showWarnings = FALSE)
acs_df <- read_csv("../data/census/state_level_acs_summary_2022.csv", show_col_types = FALSE)
sex_pct <- acs_df %>%
select(state, pct_female)
all_results <- list()
model_stats <- list()
for (year in years_to_run) {
message(glue("📊 Processing {year}..."))
file <- list.files(predicted_path, pattern = glue("all_state_predictions_{year}.*\\.csv$"), full.names = TRUE)[1]
predicted_df <- read_csv(file, show_col_types = FALSE) %>%
rename_with(tolower)%>%
transmute(
state = state,
predicted = ifelse(vote_share > 1, vote_share / 100, vote_share),
year = as.character(year)
)
merged_df <- left_join(predicted_df, sex_pct, by = "state") %>%
mutate(region = state.region[match(state, state.abb)]) %>%
drop_na()
all_results[[year]] <- merged_df
model <- lm(predicted ~ pct_female, data = merged_df)
pval <- summary(model)$coefficients["pct_female", "Pr(>|t|)"]
model_stats[[year]] <- tibble(year = year, p_value = pval)
}
combined_all <- bind_rows(all_results) %>%
mutate(year = factor(year, levels = years_to_run))
model_stats_df <- bind_rows(model_stats)
facet_labels <- model_stats_df %>%
mutate(
year = factor(year, levels = years_to_run),
label = glue("p = {pvalue(p_value, accuracy = 0.001)}")
)
facet_plot <- ggplot(combined_all, aes(x = pct_female, y = predicted, color = region)) +
geom_point(size = 2.5, alpha = 0.8) +
geom_smooth(method = "lm", se = TRUE, color = "black", linewidth = 1, show.legend = FALSE) +
facet_wrap(~ year) +
geom_text(
data = facet_labels,
mapping = aes(x = 48, y = 0.25, label = label),
inherit.aes = FALSE,
size = 4
) +
labs(
title = "Predicted Democratic Vote Share vs. % Female Population",
subtitle = glue("Shaded by Region • ACS {acs_year} 5-Year Estimates"),
x = "Percent Female (ACS)",
y = "Predicted Democratic Vote Share",
color = "Region"
) +
theme_minimal(base_size = 14)
ggsave("../plots/facet_female_vs_predicted.png", plot = facet_plot, width = 12, height = 7)
# === Load Libraries ===
library(tidyverse)
library(glue)
library(ggrepel)
library(scales)
years_to_run <- c("2008", "2012", "2016", "2020", "2024")
acs_year <- 2022
predicted_path <- "../output"
dir.create("plots", showWarnings = FALSE)
acs_df <- read_csv("../data/census/state_level_acs_summary_2022.csv", show_col_types = FALSE)
educ_pct <- acs_df %>%
select(state, pct_college) %>%
drop_na(pct_college)
all_results <- list()
model_stats <- list()
for (year in years_to_run) {
message(glue("📊 Processing {year}..."))
file <- list.files(predicted_path, pattern = glue("all_state_predictions_{year}.*\\.csv$"), full.names = TRUE)[1]
predicted_df <- read_csv(file, show_col_types = FALSE) %>%
transmute(
state = state,
predicted = ifelse(vote_share > 1, vote_share / 100, vote_share),
year = as.character(year)
)
merged_df <- left_join(predicted_df, educ_pct, by = "state") %>%
mutate(region = state.region[match(state, state.abb)]) %>%
drop_na()
all_results[[year]] <- merged_df
model <- lm(predicted ~ pct_college, data = merged_df)
pval <- summary(model)$coefficients["pct_college", "Pr(>|t|)"]
model_stats[[year]] <- tibble(year = as.numeric(year), p_value = pval)
}
combined_all <- bind_rows(all_results) %>%
mutate(year = factor(year, levels = years_to_run))
model_stats_df <- bind_rows(model_stats)
facet_labels <- model_stats_df %>%
mutate(
year = factor(year, levels = years_to_run),
label = glue("p = {pvalue(p_value, accuracy = 0.001)}")
)
facet_plot <- ggplot(combined_all, aes(x = pct_college, y = predicted, color = region)) +
geom_point(size = 2.5, alpha = 0.8) +
geom_smooth(method = "lm", se = TRUE, color = "black", linewidth = 1, show.legend = FALSE) +
facet_wrap(~ year) +
geom_text(
data = facet_labels,
mapping = aes(x = 25, y = 0.27, label = label),
inherit.aes = FALSE,
size = 4
) +
labs(
title = "Predicted Democratic Vote Share vs. % with College Degree",
subtitle = glue("Shaded by Region • ACS {acs_year} 5-Year Estimates"),
x = "Percent Age 25+ with Bachelor’s or Higher (ACS)",
y = "Predicted Democratic Vote Share",
color = "Region"
) +
theme_minimal(base_size = 14)
ggsave("../plots/facet_college_vs_predicted.png", plot = facet_plot, width = 12, height = 7)
write_csv(model_stats_df, "../plots/college_regression_table.csv")
message("Plot and regression table saved.")
library(tidyverse)
library(glue)
library(scales)
acs_df <- read_csv("../data/census/state_level_acs_summary_2022.csv", show_col_types = FALSE)
years_to_run <- c("2008", "2012", "2016", "2020", "2024")
predicted_path <- "../output"
all_results <- list()
model_stats <- list()
for (year in years_to_run) {
message(glue("Processing {year}..."))
file <- list.files(predicted_path, pattern = glue("all_state_predictions_{year}.*\\.csv$"), full.names = TRUE)[1]
predicted_df <- read_csv(file, show_col_types = FALSE) %>%
transmute(
state = state,
predicted = ifelse(vote_share > 1, vote_share / 100, vote_share),
year = year
)
merged_df <- left_join(predicted_df, acs_df, by = "state") %>%
drop_na(pct_black)
merged_df <- merged_df %>%
mutate(region = state.region[match(state, state.abb)]) %>%
drop_na(region)
all_results[[year]] <- merged_df
model <- lm(predicted ~ pct_black, data = merged_df)
pval <- summary(model)$coefficients["pct_black", "Pr(>|t|)"]
model_stats[[year]] <- tibble(year = year, p_value = pval)
}
combined_all <- bind_rows(all_results)
model_stats_df <- bind_rows(model_stats)
facet_labels <- model_stats_df %>%
mutate(
label = glue("p = {pvalue(p_value, accuracy = 0.001)}"),
year = as.character(year)
)
facet_plot <- ggplot(combined_all, aes(x = pct_black, y = predicted, color = region)) +
geom_point(size = 2.5, alpha = 0.8) +
geom_smooth(method = "lm", se = TRUE, color = "black", linewidth = 1, show.legend = FALSE) +
facet_wrap(~ year) +
geom_text(
data = facet_labels,
mapping = aes(x = 25, y = 0.27, label = label),
inherit.aes = FALSE,
size = 4
) +
labs(
title = "Predicted Democratic Vote Share vs. % Black Population",
subtitle = glue("Shaded by Region • ACS {acs_year} 5-Year Estimates"),
x = "Percent Black (ACS)",
y = "Predicted Democratic Vote Share",
color = "Region"
) +
theme_minimal(base_size = 14)
ggsave("../plots/facet_by_region_with_pvalues.png", plot = facet_plot, width = 12, height = 7)
